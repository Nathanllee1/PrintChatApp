{"version":3,"sources":["web-build/register-service-worker.js","config/Firebase.js","screens/Login.js","screens/Signup.js","screens/Profile.js","screens/Editor.js","screens/Home.js","navigation/SwitchNavigator.js","App.js","webpack:////home/nathanlee/Workspace/PrintChat/index.js?d617"],"names":["navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console","Firebase","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Login","componentDidMount","auth","onAuthStateChanged","user","props","navigation","navigate","state","email","password","handleLogin","signInWithEmailAndPassword","log","View","style","styles","container","TextInput","inputBox","value","this","onChangeText","setState","placeholder","autoCapitalize","secureTextEntry","TouchableOpacity","button","onPress","Text","buttonText","signupText","React","Component","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","width","margin","padding","fontSize","borderColor","borderBottomWidth","textAlign","marginTop","marginBottom","paddingVertical","borderWidth","borderRadius","fontWeight","color","buttonSignup","Signup","handleSignUp","createUserWithEmailAndPassword","name","Profile","signOut","YellowBox","ignoreWarnings","_console","_","clone","warn","message","indexOf","Editor","image","getPermissionAsync","a","async","Constants","platform","ios","Permissions","status","alert","_uploadImage","fetch","response","blob","filename","substring","lastIndexOf","ref","storage","child","put","getDownloadURL","url","db","firestore","collection","add","Data","Printed","Receiver","Sender","_pickImage","ImagePicker","mediaTypes","Images","allowsEditing","quality","result","cancelled","uri","Button","title","Image","source","height","marginLeft","SettingsScreen","Tab","createBottomTabNavigator","SwitchNavigator","createSwitchNavigator","screen","Home","NavigationContainer","Navigator","screenOptions","route","tabBarIcon","iconName","focused","size","Ionicons","tabBarOptions","activeTintColor","inactiveTintColor","Screen","component","initialRouteName","createAppContainer","App","fontFamily","registerRootComponent"],"mappings":"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","file":"static/js/app.7f6e2abf.chunk.js","sourcesContent":["/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/PrintChatApp/expo-service-worker.js', { scope: '/PrintChatApp/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","import firebase from 'firebase'\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAsTXK6zgFSmJ3wrkc3fa1KOaJMPWV97Rs\",\n  authDomain: \"print-chatter.firebaseapp.com\",\n  databaseURL: \"https://print-chatter.firebaseio.com\",\n  projectId: \"print-chatter\",\n  storageBucket: \"print-chatter.appspot.com\",\n  messagingSenderId: \"1083499684757\",\n  appId: \"1:1083499684757:web:3afb915df3c8e607784c9c\",\n  measurementId: \"G-VPMQM618TC\"\n};\n// Initialize Firebase\nlet Firebase = firebase.initializeApp(firebaseConfig);\n\nexport default Firebase;","import React from 'react'\nimport { View, TextInput, StyleSheet, TouchableOpacity, Text, Button } from 'react-native'\nimport Firebase from '../config/Firebase'\n\n\nclass Login extends React.Component {\n\n  componentDidMount = () => {\n    Firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.props.navigation.navigate(\"Home\")\n      }\n    })\n  }\n\n  state = {\n      email: '',\n      password: ''\n  }\n\n  handleLogin = () => {\n      const { email, password } = this.state\n\n      Firebase.auth()\n          .signInWithEmailAndPassword(email, password)\n          .then(() => this.props.navigation.navigate('Profile'))\n          .catch(error => console.log(error))\n  }\n\n  render() {\n      return (\n          <View style={styles.container}>\n              <TextInput\n                  style={styles.inputBox}\n                  value={this.state.email}\n                  onChangeText={email => this.setState({ email })}\n                  placeholder='Email'\n                  autoCapitalize='none'\n              />\n              <TextInput\n                  style={styles.inputBox}\n                  value={this.state.password}\n                  onChangeText={password => this.setState({ password })}\n                  placeholder='Password'\n                  secureTextEntry={true}\n              />\n              <TouchableOpacity style={styles.button} onPress={this.handleLogin}>\n                <Text style={styles.buttonText}>Login</Text>\n             </TouchableOpacity>\n             <Text style={styles.signupText}\n              onPress={() => this.props.navigation.navigate('Signup')}>\n                Signup\n              </Text>\n          </View>\n      )\n  }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    inputBox: {\n        width: '85%',\n        margin: 10,\n        padding: 15,\n        fontSize: 16,\n        borderColor: '#000000',\n        borderBottomWidth: 1,\n        textAlign: 'center'\n    },\n    button: {\n        marginTop: 30,\n        marginBottom: 20,\n        paddingVertical: 5,\n        alignItems: 'center',\n        backgroundColor: '#000000',\n        borderColor: '#000000',\n        borderWidth: 1,\n        borderRadius: 5,\n        width: 200\n    },\n    buttonText: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        color: '#fff'\n    },\n    buttonSignup: {\n        fontSize: 12\n    },\n    signupText : {\n      color: '#000000'\n    }\n})\n\nexport default Login","import React from 'react'\nimport { View, TextInput, StyleSheet, TouchableOpacity, Text } from 'react-native'\nimport Firebase from '../config/Firebase'\n\nclass Signup extends React.Component {\n\n    handleSignUp = () => {\n      const { email, password } = this.state\n      Firebase.auth()\n        .createUserWithEmailAndPassword(email, password)\n        .then(() => this.props.navigation.navigate('Profile'))\n        .catch(error => console.log(error))\n    }\n\n    state = {\n        name: '',\n        email: '',\n        password: ''\n    }\n\n    render() {\n        return (\n            <View style={styles.container}>\n                <TextInput\n                    style={styles.inputBox}\n                    onChangeText={name => this.setState({ name })}\n                    placeholder='Full Name'\n                />\n                <TextInput\n                    style={styles.inputBox}\n                    value={this.state.email}\n                    onChangeText={email => this.setState({ email })}\n                    placeholder='Email'\n                    autoCapitalize='none'\n                />\n                <TextInput\n                    style={styles.inputBox}\n                    value={this.state.password}\n                    onChangeText={password => this.setState({ password })}\n                    placeholder='Password'\n                    secureTextEntry={true}\n                />\n                <TouchableOpacity style={styles.button} onPress={this.handleSignUp}>\n                    <Text style={styles.buttonText}>Signup</Text>\n                </TouchableOpacity>\n                <Text style={styles.signupText}\n                 onPress={() => this.props.navigation.navigate('Login')}>\n                   Login\n                 </Text>\n            </View>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    inputBox: {\n        width: '85%',\n        margin: 10,\n        padding: 15,\n        fontSize: 16,\n        borderColor: '#d3d3d3',\n        borderBottomWidth: 1,\n        textAlign: 'center'\n    },\n    button: {\n        marginTop: 30,\n        marginBottom: 20,\n        paddingVertical: 5,\n        alignItems: 'center',\n        backgroundColor: '#000000',\n        borderWidth: 1,\n        borderRadius: 5,\n        width: 200\n    },\n    buttonText: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        color: '#fff'\n    },\n    buttonSignup: {\n        fontSize: 12\n    }\n})\n\nexport default Signup","import React from 'react'\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native'\nimport Firebase from '../config/Firebase'\n\n\nfunction Profile(props) {\n  function Signout() {\n    Firebase.auth().signOut().then(function() {\n      props.navigation.navigate('Home')// Sign-out successful.\n    }).catch(function(error) {\n      // An error happened.\n      console.log(error)\n    });\n  }\n\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <TouchableOpacity onPress={Signout}>\n        <Text>Signout</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nexport default Profile","import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { StyleSheet, Text, Image, View, TextInput, Button, Alert, SafeAreaView, ScrollView, TouchableOpacity  } from 'react-native';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\nimport * as ImagePicker from 'expo-image-picker';\nimport Constants from 'expo-constants';\nimport * as Permissions from 'expo-permissions';\nimport firebase from '../config/Firebase';\nimport 'firebase/firestore';\nimport { YellowBox } from 'react-native';\nimport _ from 'lodash';\n\nYellowBox.ignoreWarnings(['Setting a timer']);\nconst _console = _.clone(console);\nconsole.warn = message => {\n  if (message.indexOf('Setting a timer') <= -1) {\n    _console.warn(message);\n  }\n};\n\nexport default class Editor extends React.Component {\n    state = {\n        image: null,\n    };\n\n    render() {\n        let { image } = this.state;\n\n        return (\n            <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n                <Button title=\"Pick an image from camera roll\" onPress={this._pickImage} style={styles.button}/>\n                {image && <Image source={{ uri: image }} style={{ width: 200, height: 300, marginTop: 15, marginBottom: 15}} />}\n                {image && <Button title=\"Upload image\" onPress={this._uploadImage} />}\n            </View>\n        );\n    }\n\n    componentDidMount() {\n        this.getPermissionAsync();\n    }\n\n    getPermissionAsync = async () => {\n        if (Constants.platform.ios) {\n            const { status } = await Permissions.askAsync(Permissions.CAMERA_ROLL);\n            if (status !== 'granted') {\n              alert('Sorry, we need camera roll permissions to make this work!');\n            }\n        }\n    };\n\n    _uploadImage = async () => {\n        const response = await fetch(this.state.image);\n        const blob = await response.blob();\n        const filename = this.state.image.substring(this.state.image.lastIndexOf('/') + 1);\n        console.log(\"filename: \", filename);\n        var ref = firebase.storage().ref().child(filename);\n        await ref.put(blob);\n        const url = await ref.getDownloadURL().catch((error) => { throw error });\n        const db = firebase.firestore();\n        const userRef = db.collection(\"Messages\").add({\n            Data: url,\n            Printed: false,\n            Receiver: \"dOd8rPhPQGPIO9uN2ZvyeLq5uuf1\",\n            Sender: \"dOd8rPhPQGPIO9uN2ZvyeLq5uuf1\",\n        });\n        console.log(\"url: \", url);\n\n        this.setState({image: null});\n        alert(\"Image submitted\")\n\n        return url\n    }\n    /*\n    allowsEditing: true,\n    aspect: [4, 3],\n    */\n    _pickImage = async () => {\n        try {\n            let result = await ImagePicker.launchImageLibraryAsync({\n                mediaTypes: ImagePicker.MediaTypeOptions.Images,\n                allowsEditing: false,\n                quality: 1,\n            });\n            if (!result.cancelled) {\n                this.setState({ image: result.uri });\n            }\n\n            console.log(result);\n        } catch (E) {\n            console.log(E);\n        }\n    };\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 50,\n    marginLeft: 20,\n    marginBottom: 50,\n    height: '100%'\n  },\n  button : {\n    paddingVertical: 5,\n    alignItems: 'center',\n    backgroundColor: '#000000',\n    borderColor: '#000000',\n    borderWidth: 1,\n    borderRadius: 5,\n    width: 100\n  },\n  buttonText : {\n    fontSize: 15,\n    color: '#fff'\n  }\n});\n\n","import * as React from 'react';\nimport { Text, View, TouchableOpacity } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Ionicons } from '@expo/vector-icons';\nimport Firebase from '../config/Firebase'\n\nimport Editor from \"./Editor\"\nimport Profile from \"./Profile\"\n\n\nfunction SettingsScreen() {\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <Text>Friends!</Text>\n    </View>\n  );\n}\n\nconst Tab = createBottomTabNavigator();\n\nexport default function Home() {\n  return (\n    <NavigationContainer>\n      <Tab.Navigator\n        screenOptions={({ route }) => ({\n          tabBarIcon: ({ focused, color, size }) => {\n            let iconName;\n\n            if (route.name === 'Compose') {\n              iconName = focused ? 'md-brush' : 'md-brush';\n            } else if (route.name === 'Friends') {\n              iconName = focused ? 'ios-list-box' : 'ios-list';\n            } else if (route.name === 'Profile') {\n              iconName = focused ? 'ios-person' : 'ios-person';\n            }\n            // You can return any component that you like here!\n            return <Ionicons name={iconName} size={size} color={color} />;\n          },\n        })}\n        tabBarOptions={{\n          activeTintColor: 'black',\n          inactiveTintColor: 'gray',\n        }}\n      >\n        <Tab.Screen name=\"Compose\" component={Editor} />\n        <Tab.Screen name=\"Friends\" component={SettingsScreen} />\n        <Tab.Screen name=\"Profile\" component={Profile} />\n      </Tab.Navigator>\n    </NavigationContainer>\n  );\n}","import React from 'react'\nimport { createSwitchNavigator, createAppContainer } from 'react-navigation'\nimport Login from '../screens/Login'\nimport Signup from '../screens/Signup'\nimport Profile from '../screens/Profile'\nimport Home from '../screens/Home'\n\n\nconst SwitchNavigator = createSwitchNavigator(\n  {\n    Login: {\n      screen: Login\n    },\n    Signup: {\n      screen: Signup\n    },\n    Profile : {\n      screen: Profile\n    },\n    Home : {\n      screen: Home\n    }\n  },\n  {\n    initialRouteName: 'Login'\n  }\n)\n\nexport default createAppContainer(SwitchNavigator)","import React from 'react'\nimport SwitchNavigator from './navigation/SwitchNavigator'\nimport * as Font from 'expo-font';\n\nexport default class App extends React.Component {\n  render() {\n    return <SwitchNavigator style={{ fontFamily: 'Helvetica'}}/>\n  }\n}","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in the Expo client or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n"],"sourceRoot":""}